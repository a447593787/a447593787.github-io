<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Weiliang Lin</title>
        <link>https://a447593787.github.io/</link>
        <description>Recent content on Weiliang Lin</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 29 Nov 2020 15:38:53 +0800</lastBuildDate><atom:link href="https://a447593787.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SGnet</title>
        <link>https://a447593787.github.io/p/sgnet/</link>
        <pubDate>Sun, 29 Nov 2020 15:38:53 +0800</pubDate>
        
        <guid>https://a447593787.github.io/p/sgnet/</guid>
        <description>&lt;img src="https://a447593787.github.io/p/sgnet/fig1.png" alt="Featured image of post SGnet" /&gt;&lt;h1 id=&#34;论文阅读笔记&#34;&gt;论文阅读笔记&lt;/h1&gt;
&lt;h1 id=&#34;tactilesgnet-a-spiking-graph-neural-network-for-event-based-tactile-object-recognition&#34;&gt;TactileSGNet: A Spiking Graph Neural Network for Event-based Tactile Object Recognition&lt;/h1&gt;
&lt;p&gt;event-driven或event-based&lt;/p&gt;
&lt;p&gt;SNN运行平台由来自神经形态传感器或将图片转换成脉冲的输入，创建稀疏，无帧和精确定时的事件流，模型LIF和IF，我们把每个脉冲的产生看成一个事件，所以说SNN是以事件驱动的，事件驱动的神经元系统将其计算工作集中在网络的当前活动部分，由于输入是一连串的脉冲，所以可以看成整个网络的神经元都在进行工作，但他们只关注其自己当前所接受的东西，所以相对于ANN他是低延迟&lt;/p&gt;
&lt;h2 id=&#34;脉冲神经网络难点&#34;&gt;脉冲神经网络难点&lt;/h2&gt;
&lt;p&gt;网络训练的一般过程为：&lt;/p&gt;
&lt;p&gt;（一） 确定编码方式，将样本数据编码为脉冲序列（得到Si（t））&lt;/p&gt;
&lt;p&gt;（二） 将脉冲序列输入脉冲神经网络计算得输出脉冲序列So（t）；&lt;/p&gt;
&lt;p&gt;（三） 将期望脉冲序列和实际输出脉冲序列对比得到误差，并根据误差调整W。&lt;/p&gt;
&lt;p&gt;从上面过程可总结脉冲神经网络的实现中有几个难点：&lt;/p&gt;
&lt;p&gt;（一）  如何确定&lt;strong&gt;编码方式&lt;/strong&gt;，即如何将样本信息合理地转化为脉冲序列进行训练；&lt;/p&gt;
&lt;p&gt;（二）  如何设计脉冲神经元&lt;strong&gt;模型&lt;/strong&gt;，如何模拟脉冲神经网络；&lt;/p&gt;
&lt;p&gt;（三）  如何度量实际输出脉冲序列和期望输出脉冲序列&lt;strong&gt;误差&lt;/strong&gt;，即误差函数的合理的定义&lt;/p&gt;
&lt;p&gt;当前对上述难点的解决方案：&lt;/p&gt;
&lt;p&gt;（一）  延迟编码、相位编码、Time-to-First.Spike编码、BsA(Bens Spike AlgoIithm)编码等时间编码策略。&lt;/p&gt;
&lt;p&gt;（二）  LIF，IF，IM，HH模型等；&lt;/p&gt;
&lt;p&gt;（三）  误差定义（举例）&lt;/p&gt;
&lt;h2 id=&#34;摘要&#34;&gt;摘要&lt;/h2&gt;
&lt;p&gt;​		触觉对于各种机器人任务来说是至关重要的，包括抓取和手动操作。灵活的、事件驱动的电子皮肤的新进展可能很快会赋予机器人与人类相似的触摸感知能力。这些电子皮肤对变化(例如，压力、温度)做出异步响应，并且可以不规则地布置在机器人的身体或末端执行器上。&lt;/p&gt;
&lt;p&gt;​		然而，这些独特的特征可能使得当前的深度学习方法(例如卷积特征提取器)不适用于触觉学习。本文提出了一种基于事件的触觉对象识别的脉冲图神经网络。为了利用taxels的局部连通性，我们提出了几种在图形结构中组织触觉数据的方法。基于构造的图，我们开发了一个脉冲图卷积网络。&lt;/p&gt;
&lt;p&gt;​		脉冲神经网络的事件驱动性质使其更适合处理基于事件的数据。在两个触觉数据集上的实验结果表明，该方法优于其他先进的脉冲方法，在对各种不同的家居对象进行分类时，准确率达到90%左右。&lt;/p&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;​		物体识别是一项基本的感知技能，它是许多任务的基础，从开车到做饭。机器视觉的进步为机器人提供了出色的视觉对象识别能力(例如，[1]，[2])。但是，虽然视觉是一种重要的视觉形式，但它可能无法区分具有相似视觉特征的物体，或者在不太有利的条件下，例如在弱光或遮挡下。在这种情况下，触觉传感可以提供重要的信息(例如，纹理、粗糙度、摩擦)，这些信息已经应用于各种任务，包括对象识别[3]、[4]、[5]、滑动检测[6]和纹理识别[7]。&lt;/p&gt;
&lt;p&gt;​		这项研究的重点是具有挑战性的任务，基于触摸的物体识别与事件驱动的触觉传感器[8]，[9]。先前的工作(例如[7]、[4]、[3])主要使用标准的同步触觉传感器和传统的机器学习方法(例如卷积神经网络[10])。然而，事件驱动传感器本质上是不同的，无论是在操作还是提供的数据方面。类似于基于事件的摄像机[11]，[12]，事件触觉传感器异步报告环境中的变化，从而提供基于事件的“脉冲”，其中每个taxel独立于其他taxel而触发。与标准的基于同步帧的传感器相比，事件驱动传感可以实现更高的能效、更好的可扩展性和更低的延迟。然而，用这些传感器学习仍然处于初级阶段[13]。&lt;/p&gt;
&lt;p&gt;​		Taxel 其实是 &lt;strong&gt;tactile pixel&lt;/strong&gt; 的缩写, 直译过来就是接触像素点。&lt;/p&gt;
&lt;p&gt;​		在本文中，我们提出了触觉神经网络，一种新的基于事件的触觉数据识别目标的脉冲图形神经网络。与网格结构实值数据的卷积神经网络不同，我们的模型对图结构脉冲数据进行操作。这提供了两个关键优势:首先，该模型可以更好地利用高度不规则的局部taxel结构，例如，具有生物启发的配置或缠绕在末端执行器周围的灵活传感器。第二，脉冲神经网络也是事件驱动的，可以直接处理传感器提供的基于脉冲的数据；这绕过了从离散事件到实值帧的潜在昂贵的转换。此外，SNN可以在高能效的神经形态处理器上运行，如IBM TrueNorth [14]和Intel Loihi [15]。&lt;/p&gt;
&lt;p&gt;​		据我们所知，TactileSGNet是第一个用于触觉数据的事件驱动图形神经网络。一个相关的模型是最近提出的触觉网络[16]，它使用图形卷积网络(GCN) [17]进行触觉对象识别。这项工作的主要区别是，战术神经网络是事件驱动的(具有尖峰神经元)，我们利用拓扑自适应图卷积网络(TACNN)[18]；之前已经证明，TAGCN实现了卓越的性能，同时与标准GCN相比，计算效率更高。事实上，我们在两个现有的基于事件的触觉数据集上使用NeuTouch传感器进行的计算实验[8]表明，利用具有尖峰神经元的TAGCN实现了优于其他流行架构的性能。我们还试验了构建触觉图形的替代方法；结果表明，特别是最近邻和最小生成树方法，可以获得更好的性能。&lt;/p&gt;
&lt;h2 id=&#34;背景和相关工作&#34;&gt;背景和相关工作&lt;/h2&gt;
&lt;p&gt;​		我们的工作结合了图形神经网络和脉冲神经网络在基于事件的触觉对象识别方面的最新进展。在下文中，我们简要概述了这些领域的背景和相关工作。请注意，这些研究领域是广泛的，由于空间的限制，我们涵盖了代表性的工作，并向想要更多细节的读者推荐更全面的调查文章。&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://a447593787.github.io/p/sgnet/fig1.png&#34; data-size=&#34;453x325&#34;&gt;
			&lt;img srcset=&#34;https://a447593787.github.io/p/sgnet/fig1_hu780fc8ef55f5d63816cb750690a61891_165865_480x0_resize_box_2.png 480w, https://a447593787.github.io/p/sgnet/fig1_hu780fc8ef55f5d63816cb750690a61891_165865_1024x0_resize_box_2.png 1024w&#34;
				src=&#34;https://a447593787.github.io/p/sgnet/fig1.png&#34; width=&#34;453&#34; height=&#34;325&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;​		触觉感知。触觉感知提供了不同于视觉感知的信息形态(例如粗糙度、纹理、温度)；融入触觉使机器人能够更好地感知物理环境。触觉已经在许多机器人任务中得到应用，如物体识别[3]、[4]、[5]、滑动检测[6]和纹理识别[7]。&lt;/p&gt;
&lt;p&gt;​		迄今为止，已经开发了几种类型的触觉传感器(见[19]的调查)；流行的传感器包括BioTac1、PPS2h和Tekscan3。在这篇文章中，我们重点讨论了使用NeuTouch，这是一种基于事件的触觉传感器，在最近的工作中已经提出[8]。以前很少有基于事件的触觉数据的学习工作。最近的工作[8]提出了一个基于二语习得的多模态尖峰网络[20]。我们的工作与众不同之处在于，我们探索了具有LIF(漏积分-点火)[21]神经元而不是SRM(尖峰响应模型)神经元的图形尖峰神经网络(而不是完全连接的层)[22]&lt;/p&gt;
&lt;p&gt;​		图形神经网络(GNNs)是一类结合深度学习模型和结构化数据方法的模型[23]。GNNs最近因其在许多领域的适用性而变得流行，从社交网络挖掘到将逻辑嵌入深层网络[24]。对这项工作特别感兴趣的是卷积运算通过可训练的图形滤波器在谱域中进行的GCNs[25]，[26]。为了降低频域分解和投影的计算成本，通常使用有限阶多项式来近似图形滤波器。例如，在[25]、[27]中，使用图拉普拉斯矩阵的高次切比雪夫多项式来近似图滤波器。一个流行的GCN [17]用图拉普拉斯的一阶切比雪夫多项式逼近图滤波器。最近的工作[18]提出限制邻接矩阵的多项式(最大二次)，以进一步降低复杂性。在本研究中，由于其计算性，我们使用TAGCN对触觉数据进行卷积计算效率和表现&lt;/p&gt;
&lt;p&gt;​		脉冲神经网络形成了神经形态计算的核心方法[28]。简单神经网络在生物学上比深度神经网络更合理，并且可以在高能效的神经形态硬件上执行(例如英特尔洛伊希[15])。神经元网络可以具有与神经元网络相似的网络拓扑，但使用不同的神经元模型。神经网络常用的神经元模型包括LIF [21]和SRM [22]。SNNs中的一个问题是尖峰函数是不可微的，使得不可能使用反向传播来训练网络。为了解决这个问题，已经提出了几种解决方案，例如将dnn转换为snn[29]，以及近似尖峰函数的导数[30]，[20]。在这项工作中，我们使用SNN，因为它们能够直接处理尖峰传感器数据。&lt;/p&gt;
&lt;h2 id=&#34;用触觉图形学习&#34;&gt;用触觉图形学习&lt;/h2&gt;
&lt;p&gt;​		在这一节中，我们描述了我们从基于事件的触觉数据中学习的基于图形的方法。如前所述，与视觉像素不同，用于触摸感测的像素可以以不规则的方式构造。事实上，人体触摸传感器在身体上的分布是不均匀的(流行的皮质类侏儒显示出相应的不同神经需求)。&lt;/p&gt;
&lt;p&gt;​		随着人工电子皮肤在功能和价格上的不断发展，我们预计机器人将结合灵活的皮肤，为人类提供类似(或可能更好)的触摸传感能力。触觉传感器可以“包裹”在现有的身体部位周围，或者具有以不规则配置组织的分类。考虑一下我们实验中使用的NeuTouch[8]；NeuTouch是一种受生物启发的指尖触觉传感器，具有39个以放射状空间排列的像素(图1)。在下文中，我们将使用NeuTouch作为我们的运行示例来描述我们的方法，但是请注意，我们的方法可以用于具有不同taxel配置和布局的其他传感器&lt;/p&gt;
&lt;h3 id=&#34;a触觉图形构建&#34;&gt;A、触觉图形构建&lt;/h3&gt;
&lt;p&gt;​		为了处理来自触觉传感器的数据，可以采用深度神经网络中使用的标准卷积层[31]。然而，这需要将数据“强制”到网格结构中，这需要用零填充(或插值)单元值指定任意的网格大小。在这里，我们采取了一种更自然的方法，基于底层分类的局部空间排列构建触觉图。&lt;/p&gt;
&lt;p&gt;​		设G = (V，E)为触觉图，其中V为一组N个节点，E为一组无向边4。节点自然地被映射到taxels，但是边缘必须被指定。我们建议利用点的空间/几何配置，并引入基于欧几里德的边计算两点之间的距离&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://a447593787.github.io/p/sgnet/fig2.png&#34; data-size=&#34;557x294&#34;&gt;
			&lt;img srcset=&#34;https://a447593787.github.io/p/sgnet/fig2_hu993ebe522d2bef64ea7b2af418616fb9_51143_480x0_resize_box_2.png 480w, https://a447593787.github.io/p/sgnet/fig2_hu993ebe522d2bef64ea7b2af418616fb9_51143_1024x0_resize_box_2.png 1024w&#34;
				src=&#34;https://a447593787.github.io/p/sgnet/fig2.png&#34; width=&#34;557&#34; height=&#34;294&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;​		作为一个具体的例子，图2示出了通过使用上述用于中性触摸的方法构建的触觉图形。我们的实验将在很大程度上比较使用手动方法的方法，但我们包括额外的实验，显示图形连接如何影响对象识别任务的性能。&lt;/p&gt;
&lt;h2 id=&#34;btactilesgnet&#34;&gt;B、TactileSGNet&lt;/h2&gt;
&lt;p&gt;​		为了处理来自我们触觉图的数据，我们提出了一种脉冲神经网络结构，我们称之为触觉神经网络(如图3所示)。该网络使用LIF神经元，包括拓扑自适应图卷积(TAGConv)层[18]，全连接(FC)层，以及用于分类的最终投票层。在下文中，我们将描述这些组件中的每一个:&lt;/p&gt;
&lt;p&gt;输入：机器人有39个触点，对这39个触点进行监测250个时间片，形成250个图输入&lt;/p&gt;
&lt;p&gt;处理：SNN封装的GNN+MLP&lt;/p&gt;
&lt;p&gt;输出：label&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://a447593787.github.io/p/sgnet/fig3.png&#34; data-size=&#34;1066x277&#34;&gt;
			&lt;img srcset=&#34;https://a447593787.github.io/p/sgnet/fig3_hu7cfdaeda18537b8cef0e38da3efdc253_153472_480x0_resize_box_2.png 480w, https://a447593787.github.io/p/sgnet/fig3_hu7cfdaeda18537b8cef0e38da3efdc253_153472_1024x0_resize_box_2.png 1024w&#34;
				src=&#34;https://a447593787.github.io/p/sgnet/fig3.png&#34; width=&#34;1066&#34; height=&#34;277&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LIF Activations&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;​		在传统的卷积神经网络中，最常见的激活函数是ReLU [32]及其变体(如ReLU [33])。然而，ReLU激活功能不适用于SNNs。我们使用LIF模型，这是一个描述尖峰神经元动力学的流行模型[34]，[35]，[28]。&lt;/p&gt;
&lt;h2 id=&#34;数据集&#34;&gt;数据集&lt;/h2&gt;
&lt;p&gt;​		我们使用最近开发的基于事件的触觉数据集比较了这些方法[8]。简而言之，数据集是使用一个7自由度的Franka Emika熊猫手臂收集的，该手臂配备了一个机器人智商2F-140手爪，配备了一个基于NeuTouch事件的触觉传感器[8]和一个ACES解码器[9]，将传感器信号解码为尖峰信号。熊猫选择了各种不同的家居物品来生成两个数据集:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**EvTouch-Objects：**这个数据集包括来自36个对象类的触觉数据(图5(a))。在这些对象中，26个是来自YCB数据集[38]的对象，其余10个对象是选择来补充相对刚性的YCB对象的可变形对象。为了收集触觉数据，机器人抓手抓住物体，将其从桌子上抬起20厘米，然后放回桌子上。我们使用了从举起物体到释放物体这段时间内收集到的数据(≈ 5秒)。对于每个对象类，收集了20个样本，总共产生720个样本。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**EvTouch-Containers：**该数据集包括四个容器的触觉数据:一个咖啡罐、一个塑料苏打瓶、一个豆奶盒和一个金属金枪鱼罐(图5 (b))。这些容器的最大体积分别为250克、400克、300克和140克。每个容器分别装满{0%，25%，50%，75%，100%}最大量的水(或打开的金枪鱼罐头的大米)，产生20个对象类。在数据收集过程中，机器人抓手抓住每个容器然后把它抬离桌子5厘米。我们利用抓取物体期间收集的数据，将其举起并保持一段时间(总共约6.5秒)。总共有300个样本(每个对象类15个样本)。该数据集对于触觉传感可能特别具有挑战性，因为权重可能不容易区分。&lt;/p&gt;
&lt;p&gt;对于这两个数据集，我们使用了0.02秒的bin持续时间。感兴趣的读者可以在[8]和相应的网站5中找到关于数据集的更多细节。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://a447593787.github.io/p/sgnet/fig5.png&#34; data-size=&#34;546x200&#34;&gt;
			&lt;img srcset=&#34;https://a447593787.github.io/p/sgnet/fig5_hu7e35d1e5b9992d98878f6df50595d2c0_122459_480x0_resize_box_2.png 480w, https://a447593787.github.io/p/sgnet/fig5_hu7e35d1e5b9992d98878f6df50595d2c0_122459_1024x0_resize_box_2.png 1024w&#34;
				src=&#34;https://a447593787.github.io/p/sgnet/fig5.png&#34; width=&#34;546&#34; height=&#34;200&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>测试文章</title>
        <link>https://a447593787.github.io/p/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</link>
        <pubDate>Mon, 19 Oct 2020 17:50:20 +0800</pubDate>
        
        <guid>https://a447593787.github.io/p/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</guid>
        <description>&lt;h1 id=&#34;java多线程详解&#34;&gt;java多线程详解&lt;/h1&gt;
&lt;h2 id=&#34;三种创建方式&#34;&gt;三种创建方式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Thread class：继承Thread类(重点)，重写run()方法，创建一个线程对象，调用start()开启线程，线程不一定立即执行，cpu调度多线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runnable接口：实现Runnable接口(重点)，重写run方法，创建runnable接口的实现类对象，创建线程对象，通过线程对象来开启我们的线程，代理，调用start方法&lt;/p&gt;
&lt;p&gt;new Thread(testThread3).start&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%bb%a7%e6%89%bfThread%e7%b1%bb%e5%92%8c%e5%ae%9e%e7%8e%b0Runnable%e6%8e%a5%e5%8f%a3%e5%af%b9%e6%af%94.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Callable接口：实现Callable接口(了解)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e5%ae%9e%e7%8e%b0Callable%e6%8e%a5%e5%8f%a3.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;好处：可以定义返回值，可以跑出异常&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;多个线程操作同一个资源的情况下，线程不安全，数据紊乱&lt;/p&gt;
&lt;h2 id=&#34;静态代理&#34;&gt;静态代理&lt;/h2&gt;
&lt;p&gt;婚庆公司！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;静态代理模式总结&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;真实对象和代理对象都要实现统一个接口，代理对象要代理真实角色&lt;/p&gt;
&lt;p&gt;代理对象可以做很多真实对象做不了的事情&lt;/p&gt;
&lt;p&gt;真实对象专注做自己的事情&lt;/p&gt;
&lt;h2 id=&#34;lamda表达式&#34;&gt;Lamda表达式&lt;/h2&gt;
&lt;p&gt;函数式 接口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e5%87%bd%e6%95%b0%e5%bc%8f%e6%8e%a5%e5%8f%a3.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Lamda表达式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5clamda%e8%a1%a8%e8%be%be%e5%bc%8f.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;线程状态&#34;&gt;线程状态&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e7%8a%b6%e6%80%81.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程停止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建议线程正常停止&amp;mdash;&amp;gt;利用次数，不建议死循环&lt;/p&gt;
&lt;p&gt;建议使用标志位&amp;mdash;&amp;gt;设置一个标志位&lt;/p&gt;
&lt;p&gt;不要使用stop或者destory等过时或者jdk不建议使用的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程休眠&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sleep指定当前线程阻塞的毫秒数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e4%bc%91%e7%9c%a0sleep.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程礼让——yield&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e7%a4%bc%e8%ae%a9.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程强制执行——join&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;想象为插队&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e5%bc%ba%e5%88%b6%e6%89%a7%e8%a1%8c.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Chinese Test</title>
        <link>https://a447593787.github.io/p/test-chinese/</link>
        <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://a447593787.github.io/p/test-chinese/</guid>
        <description>&lt;img src="https://a447593787.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg" alt="Featured image of post Chinese Test" /&gt;&lt;h1 id=&#34;java多线程详解&#34;&gt;java多线程详解&lt;/h1&gt;
&lt;h2 id=&#34;三种创建方式&#34;&gt;三种创建方式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Thread class：继承Thread类(重点)，重写run()方法，创建一个线程对象，调用start()开启线程，线程不一定立即执行，cpu调度多线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runnable接口：实现Runnable接口(重点)，重写run方法，创建runnable接口的实现类对象，创建线程对象，通过线程对象来开启我们的线程，代理，调用start方法&lt;/p&gt;
&lt;p&gt;new Thread(testThread3).start&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%bb%a7%e6%89%bfThread%e7%b1%bb%e5%92%8c%e5%ae%9e%e7%8e%b0Runnable%e6%8e%a5%e5%8f%a3%e5%af%b9%e6%af%94.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Callable接口：实现Callable接口(了解)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e5%ae%9e%e7%8e%b0Callable%e6%8e%a5%e5%8f%a3.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;好处：可以定义返回值，可以跑出异常&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;多个线程操作同一个资源的情况下，线程不安全，数据紊乱&lt;/p&gt;
&lt;h2 id=&#34;静态代理&#34;&gt;静态代理&lt;/h2&gt;
&lt;p&gt;婚庆公司！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;静态代理模式总结&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;真实对象和代理对象都要实现统一个接口，代理对象要代理真实角色&lt;/p&gt;
&lt;p&gt;代理对象可以做很多真实对象做不了的事情&lt;/p&gt;
&lt;p&gt;真实对象专注做自己的事情&lt;/p&gt;
&lt;h2 id=&#34;lamda表达式&#34;&gt;Lamda表达式&lt;/h2&gt;
&lt;p&gt;函数式 接口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e5%87%bd%e6%95%b0%e5%bc%8f%e6%8e%a5%e5%8f%a3.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Lamda表达式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5clamda%e8%a1%a8%e8%be%be%e5%bc%8f.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;线程状态&#34;&gt;线程状态&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e7%8a%b6%e6%80%81.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程停止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建议线程正常停止&amp;mdash;&amp;gt;利用次数，不建议死循环&lt;/p&gt;
&lt;p&gt;建议使用标志位&amp;mdash;&amp;gt;设置一个标志位&lt;/p&gt;
&lt;p&gt;不要使用stop或者destory等过时或者jdk不建议使用的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程休眠&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sleep指定当前线程阻塞的毫秒数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e4%bc%91%e7%9c%a0sleep.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程礼让——yield&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e7%a4%bc%e8%ae%a9.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程强制执行——join&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;想象为插队&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%ba%bf%e7%a8%8b%e5%bc%ba%e5%88%b6%e6%89%a7%e8%a1%8c.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>java多线程入门</title>
        <link>https://a447593787.github.io/p/test-chinese/</link>
        <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://a447593787.github.io/p/test-chinese/</guid>
        <description>&lt;img src="https://a447593787.github.io/helena-hertz-wWZzXlDpMog-unsplash.jpg" alt="Featured image of post java多线程入门" /&gt;&lt;h1 id=&#34;java多线程详解&#34;&gt;java多线程详解&lt;/h1&gt;
&lt;h2 id=&#34;三种创建方式&#34;&gt;三种创建方式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Thread class：继承Thread类(重点)，重写run()方法，创建一个线程对象，调用start()开启线程，线程不一定立即执行，cpu调度多线程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runnable接口：实现Runnable接口(重点)，重写run方法，创建runnable接口的实现类对象，创建线程对象，通过线程对象来开启我们的线程，代理，调用start方法&lt;/p&gt;
&lt;p&gt;new Thread(testThread3).start&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e7%bb%a7%e6%89%bfThread%e7%b1%bb%e5%92%8c%e5%ae%9e%e7%8e%b0Runnable%e6%8e%a5%e5%8f%a3%e5%af%b9%e6%af%94.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Callable接口：实现Callable接口(了解)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;D:%5chugo_0.76.4_Windows-64bit%5cmyblog2%5ccontent%5cjava_duoxiancheng%5c%e5%ae%9e%e7%8e%b0Callable%e6%8e%a5%e5%8f%a3.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;好处：可以定义返回值，可以跑出异常&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;多个线程操作同一个资源的情况下，线程不安全，数据紊乱&lt;/p&gt;
&lt;h2 id=&#34;静态代理&#34;&gt;静态代理&lt;/h2&gt;
&lt;p&gt;婚庆公司！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;静态代理模式总结&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;真实对象和代理对象都要实现统一个接口，代理对象要代理真实角色&lt;/p&gt;
&lt;p&gt;代理对象可以做很多真实对象做不了的事情&lt;/p&gt;
&lt;p&gt;真实对象专注做自己的事情&lt;/p&gt;
&lt;h2 id=&#34;lamda表达式&#34;&gt;Lamda表达式&lt;/h2&gt;
&lt;p&gt;函数式 接口：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%e5%87%bd%e6%95%b0%e5%bc%8f%e6%8e%a5%e5%8f%a3.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Lamda表达式&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;lamda%e8%a1%a8%e8%be%be%e5%bc%8f.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;h2 id=&#34;线程状态&#34;&gt;线程状态&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;%e7%ba%bf%e7%a8%8b%e7%8a%b6%e6%80%81.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程停止&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建议线程正常停止&amp;mdash;&amp;gt;利用次数，不建议死循环&lt;/p&gt;
&lt;p&gt;建议使用标志位&amp;mdash;&amp;gt;设置一个标志位&lt;/p&gt;
&lt;p&gt;不要使用stop或者destory等过时或者jdk不建议使用的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程休眠&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;sleep指定当前线程阻塞的毫秒数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%e7%ba%bf%e7%a8%8b%e4%bc%91%e7%9c%a0sleep.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程礼让——yield&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%e7%ba%bf%e7%a8%8b%e7%a4%bc%e8%ae%a9.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;线程强制执行——join&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;想象为插队&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%e7%ba%bf%e7%a8%8b%e5%bc%ba%e5%88%b6%e6%89%a7%e8%a1%8c.png&#34; alt=&#34;&#34;  /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Markdown Syntax Guide</title>
        <link>https://a447593787.github.io/p/markdown-syntax-guide/</link>
        <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://a447593787.github.io/p/markdown-syntax-guide/</guid>
        <description>&lt;img src="https://a447593787.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post Markdown Syntax Guide" /&gt;&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;
&lt;h2 id=&#34;headings&#34;&gt;Headings&lt;/h2&gt;
&lt;p&gt;The following HTML &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;—&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; elements represent six levels of section headings. &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; is the highest section level while &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt; is the lowest.&lt;/p&gt;
&lt;h1 id=&#34;h1&#34;&gt;H1&lt;/h1&gt;
&lt;h2 id=&#34;h2&#34;&gt;H2&lt;/h2&gt;
&lt;h3 id=&#34;h3&#34;&gt;H3&lt;/h3&gt;
&lt;h4 id=&#34;h4&#34;&gt;H4&lt;/h4&gt;
&lt;h5 id=&#34;h5&#34;&gt;H5&lt;/h5&gt;
&lt;h6 id=&#34;h6&#34;&gt;H6&lt;/h6&gt;
&lt;h2 id=&#34;paragraph&#34;&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p&gt;
&lt;p&gt;Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.&lt;/p&gt;
&lt;h2 id=&#34;blockquotes&#34;&gt;Blockquotes&lt;/h2&gt;
&lt;p&gt;The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a &lt;code&gt;footer&lt;/code&gt; or &lt;code&gt;cite&lt;/code&gt; element, and optionally with in-line changes such as annotations and abbreviations.&lt;/p&gt;
&lt;h4 id=&#34;blockquote-without-attribution&#34;&gt;Blockquote without attribution&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong&gt;Note&lt;/strong&gt; that you can use &lt;em&gt;Markdown syntax&lt;/em&gt; within a blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;blockquote-with-attribution&#34;&gt;Blockquote with attribution&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t communicate by sharing memory, share memory by communicating.&lt;!-- raw HTML omitted --&gt;
— &lt;!-- raw HTML omitted --&gt;Rob Pike&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;tables&#34;&gt;Tables&lt;/h2&gt;
&lt;p&gt;Tables aren&amp;rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Age&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alice&lt;/td&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;inline-markdown-within-tables&#34;&gt;Inline Markdown within tables&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Italics&lt;/th&gt;
&lt;th&gt;Bold&lt;/th&gt;
&lt;th&gt;Code&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;italics&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;bold&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;code&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;code-blocks&#34;&gt;Code Blocks&lt;/h2&gt;
&lt;h4 id=&#34;code-block-with-backticks&#34;&gt;Code block with backticks&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Example HTML5 Document&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;code-block-indented-with-four-spaces&#34;&gt;Code block indented with four spaces&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;code-block-with-hugos-internal-highlight-shortcode&#34;&gt;Code block with Hugo&amp;rsquo;s internal highlight shortcode&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;lang&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;charset&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Example HTML5 Document&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;head&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;list-types&#34;&gt;List Types&lt;/h2&gt;
&lt;h4 id=&#34;ordered-list&#34;&gt;Ordered List&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;First item&lt;/li&gt;
&lt;li&gt;Second item&lt;/li&gt;
&lt;li&gt;Third item&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;unordered-list&#34;&gt;Unordered List&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;List item&lt;/li&gt;
&lt;li&gt;Another item&lt;/li&gt;
&lt;li&gt;And another item&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;nested-list&#34;&gt;Nested list&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Fruit
&lt;ul&gt;
&lt;li&gt;Apple&lt;/li&gt;
&lt;li&gt;Orange&lt;/li&gt;
&lt;li&gt;Banana&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dairy
&lt;ul&gt;
&lt;li&gt;Milk&lt;/li&gt;
&lt;li&gt;Cheese&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;other-elements--abbr-sub-sup-kbd-mark&#34;&gt;Other Elements — abbr, sub, sup, kbd, mark&lt;/h2&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;GIF&lt;!-- raw HTML omitted --&gt; is a bitmap image format.&lt;/p&gt;
&lt;p&gt;H&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;O&lt;/p&gt;
&lt;p&gt;X&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt; + Y&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt; = Z&lt;!-- raw HTML omitted --&gt;n&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Press &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;CTRL&lt;!-- raw HTML omitted --&gt;+&lt;!-- raw HTML omitted --&gt;ALT&lt;!-- raw HTML omitted --&gt;+&lt;!-- raw HTML omitted --&gt;Delete&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; to end the session.&lt;/p&gt;
&lt;p&gt;Most &lt;!-- raw HTML omitted --&gt;salamanders&lt;!-- raw HTML omitted --&gt; are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The above quote is excerpted from Rob Pike&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=PAAkCSZUG1c&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;talk&lt;/a&gt; during Gopherfest, November 18, 2015. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
        </item>
        <item>
        <title>Placeholder Text</title>
        <link>https://a447593787.github.io/p/placeholder-text/</link>
        <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://a447593787.github.io/p/placeholder-text/</guid>
        <description>&lt;img src="https://a447593787.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash.jpg" alt="Featured image of post Placeholder Text" /&gt;&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;
&lt;p&gt;Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Exierant elisi ambit vivere dedere&lt;/li&gt;
&lt;li&gt;Duce pollice&lt;/li&gt;
&lt;li&gt;Eris modo&lt;/li&gt;
&lt;li&gt;Spargitque ferrea quos palude&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Comas hunc haec pietate fetum procerum dixit&lt;/li&gt;
&lt;li&gt;Post torum vates letum Tiresia&lt;/li&gt;
&lt;li&gt;Flumen querellas&lt;/li&gt;
&lt;li&gt;Arcanaque montibus omnes&lt;/li&gt;
&lt;li&gt;Quidem et&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;vagus-elidunt&#34;&gt;Vagus elidunt&lt;/h1&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Canons_of_page_construction#Van_de_Graaf_canon&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The Van de Graaf Canon&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;mane-refeci-capiebant-unda-mulcebat&#34;&gt;Mane refeci capiebant unda mulcebat&lt;/h2&gt;
&lt;p&gt;Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. &lt;strong&gt;Faces illo pepulere&lt;/strong&gt; tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.&lt;/p&gt;
&lt;p&gt;Iubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.&lt;/p&gt;
&lt;p&gt;Eurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel &lt;strong&gt;mitis temploque&lt;/strong&gt; vocatus, inque alis, &lt;em&gt;oculos nomen&lt;/em&gt; non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides &lt;strong&gt;parte&lt;/strong&gt;.&lt;/p&gt;</description>
        </item>
        <item>
        <title>Math Typesetting</title>
        <link>https://a447593787.github.io/p/math-typesetting/</link>
        <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://a447593787.github.io/p/math-typesetting/</guid>
        <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;
&lt;p&gt;In this example we will be using &lt;a class=&#34;link&#34; href=&#34;https://katex.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;KaTeX&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a partial under &lt;code&gt;/layouts/partials/math.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Within this partial reference the &lt;a class=&#34;link&#34; href=&#34;https://katex.org/docs/autorender.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Auto-render Extension&lt;/a&gt; or host these scripts locally.&lt;/li&gt;
&lt;li&gt;Include the partial in your templates like so:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; or .Params.math .Site.Params.math &lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; partial &lt;span class=&#34;s2&#34;&gt;&amp;#34;math.html&amp;#34;&lt;/span&gt; . &lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;{{&lt;/span&gt; end &lt;span class=&#34;o&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;To enable KaTex globally set the parameter &lt;code&gt;math&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in a project&amp;rsquo;s configuration&lt;/li&gt;
&lt;li&gt;To enable KaTex on a per page basis include the parameter &lt;code&gt;math: true&lt;/code&gt; in content files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Use the online reference of &lt;a class=&#34;link&#34; href=&#34;https://katex.org/docs/supported.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Supported TeX Functions&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;p&gt;Block math:
$$
\varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } }
$$&lt;/p&gt;</description>
        </item>
        <item>
        <title>Emoji Support</title>
        <link>https://a447593787.github.io/p/emoji-support/</link>
        <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
        
        <guid>https://a447593787.github.io/p/emoji-support/</guid>
        <description>&lt;img src="https://a447593787.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash.jpg" alt="Featured image of post Emoji Support" /&gt;&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/functions/emojify/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;emojify&lt;/code&gt;&lt;/a&gt; function can be called directly in templates or &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/templates/shortcode-templates/#inline-shortcodes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Inline Shortcodes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To enable emoji globally, set &lt;code&gt;enableEmoji&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your site&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/configuration/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;configuration&lt;/a&gt; and then you can type emoji shorthand codes directly in content files; e.g.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;http://www.emoji-cheat-sheet.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Emoji cheat sheet&lt;/a&gt; is a useful reference for emoji shorthand codes.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;N.B.&lt;/strong&gt; The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;.emoji {
  font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
